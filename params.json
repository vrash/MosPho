{
  "name": "MosPho - Photo Mosaic Musings",
  "tagline": "",
  "body": "### MosPho\r\nBasic image mosaic creator\r\n\r\n## Implementation \r\nBare bones. As much background processing as possible. As many code complete tenets followed as possible\r\nNo Picasso/Fresco/Retrofit and other things. No real OOP. Does the job for an MVP though and I'd be happy to ship and measure progress before building a beast. If there's no network, I pick up average chunk colours and display the mosaic.\r\n\r\n# Logic\r\nVery Simple. \r\n1.) FETCH IMAGE FROM WHEREVER THE USER WANTS TO\r\n2.) SPLIT IMAGE INTO SMALLER PIECES\r\n3.) RUN EACH ROW THROUGH THE NETWORK TO FIND THE EQUIVALENT IMAGE\r\n4.) STITCH THE IMAGE BACK\r\n5.) DISPLAY MOSAIC AND VOILA, WE'RE DONE.\r\n\r\n## MinSDK\r\nKitKat - API 19. Reason is that still a large % of users are on kitkat and although tempting to set minSDK to Lollipop (and get all the Palette class goodness) this is better for bare bones coding and manipulation. \r\n\r\n## ScreenGrabs of important functionality\r\n\r\n### Authors and Contributors\r\n@vrash\r\n\r\n### Support or Contact\r\nHaving trouble? Email me at vrashabh86@gmail.com and I will help you set this up\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}